{"name":"Tinyrest","tagline":"A tiny FSharp and CSharp Rest server","body":"# TinyRest\r\nA tiny FSharp and CSharp Rest server written in F#\r\n\r\n# Install\r\n\r\nA nuget package exists hehe: https://www.nuget.org/packages/TinyRest/\r\n\r\n\tPM> Install-Package TinyRest\r\n\r\n# Usage in FSharp\r\n\r\nThere an example of a simple file server here: \r\n  https://github.com/rflechner/TinyRest/blob/master/TinyRest/TinyRest/TinyRestServer-sample.fsx\r\n\r\n\r\n\r\n    let routes = [\r\n                GET (Path(\"/\")) <| fun q r -> text \"coucou\"\r\n                get \"/bye\" <| fun q r -> text \"bye bye\\n@++\"\r\n                getPattern \"/haha/(.*)\" <| fun q r -> text \"ha ha\"\r\n                GET (Path(\"/files\")) <| listFiles\r\n                get \"/download\" <| download\r\n             ]\r\n\r\n    let conf = { Schema=Http; Port=8009; BasePath=Some \"/TinyRest1\"; Routes=routes; }\r\n\tlisten conf\r\n\tConsole.Read () |> ignore\r\n\r\n# Usage in CSharp\r\n\r\n    class Program\r\n    {\r\n        private static int count = 0;\r\n\r\n        private static void Main(string[] args)\r\n        {\r\n            TinyRestServerCSharp.TinyRest.Server()\r\n                .WithHttp()\r\n                .WithPort(8001)\r\n                .WithBasePath(\"/learning\")\r\n                .OnGetPath(\"/\", (request, response) => \"coucou \" + (count++))\r\n                .OnGetPath(\"/json\", (request, response) => response.Json(new\r\n                {\r\n                    Text = \"coucou \" + (count++)\r\n                }))\r\n                .Create()\r\n                .Listen();\r\n\r\n            Console.Read();\r\n        }\r\n\r\n    }\r\n\r\n","google":"UA-25609136-3","note":"Don't delete this file! It's used internally to help with page regeneration."}